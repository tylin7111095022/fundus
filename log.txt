INFO: ResGCNet(
  (conv1): Conv2d(3, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
  (layernorm1): LayerNorm((32, 512, 512), eps=1e-05, elementwise_affine=True)
  (residualGCblock): Risudual_GC_Module_for_resgcnet(
    (conv1): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (layernorm1): LayerNorm((16, 512, 512), eps=1e-05, elementwise_affine=True)
    (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (layernorm2): LayerNorm((16, 512, 512), eps=1e-05, elementwise_affine=True)
    (conv_1x1_1): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
    (conv_for_score): Conv2d(16, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (score): Softmax(dim=1)
    (conv3): Conv2d(16, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (layernorm3): LayerNorm((1, 512, 512), eps=1e-05, elementwise_affine=True)
    (conv4): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (layernorm2): LayerNorm((32, 512, 512), eps=1e-05, elementwise_affine=True)
  (conv2): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (score): Sigmoid()
  (globalmaxpooling): AdaptiveMaxPool2d(output_size=1)
  (globalavgpooling): AdaptiveAvgPool2d(output_size=1)
  (dropout): Dropout(p=0.5, inplace=False)
  (clr): FCN(
    (input_layer): Linear(in_features=32, out_features=8, bias=True)
    (output_layer): Linear(in_features=8, out_features=5, bias=True)
  )
)
INFO: Starting training:
        Model:          resgcnet
        Epochs:         10
        Batch size:     10
        Training size:  188
        Testing size:   46
        Image size:     512
        Device:         cuda
        Initial learning rate:  0.001
    
INFO: train Loss for epoch 1: 0.7401
INFO: test_mean_loss: 0.6616
INFO: at epoch 1, BESTMODEL.pth saved!
INFO: train Loss for epoch 2: 0.6536
INFO: test_mean_loss: 0.6187
INFO: at epoch 2, BESTMODEL.pth saved!
INFO: train Loss for epoch 3: 0.6018
INFO: test_mean_loss: 0.5716
INFO: at epoch 3, BESTMODEL.pth saved!
INFO: train Loss for epoch 4: 0.5785
INFO: test_mean_loss: 0.5617
INFO: at epoch 4, BESTMODEL.pth saved!
INFO: train Loss for epoch 5: 0.5435
INFO: test_mean_loss: 0.5446
INFO: at epoch 5, BESTMODEL.pth saved!
INFO: train Loss for epoch 6: 0.5383
INFO: test_mean_loss: 0.5415
INFO: at epoch 6, BESTMODEL.pth saved!
INFO: train Loss for epoch 7: 0.5240
INFO: test_mean_loss: 0.5356
INFO: at epoch 7, BESTMODEL.pth saved!
INFO: train Loss for epoch 8: 0.5298
INFO: test_mean_loss: 0.5396
INFO: train Loss for epoch 9: 0.5160
INFO: test_mean_loss: 0.5353
INFO: at epoch 9, BESTMODEL.pth saved!
INFO: train Loss for epoch 10: 0.5147
INFO: test_mean_loss: 0.5271
INFO: at epoch 10, BESTMODEL.pth saved!
