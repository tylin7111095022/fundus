INFO: DataParallel(
  (module): Sequential(
    (0): Conv(
      (conv): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU()
    )
    (1): Conv(
      (conv): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU()
    )
    (2): C2f(
      (cv1): Conv(
        (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU()
      )
      (cv2): Conv(
        (conv): Conv2d(48, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU()
      )
      (m): ModuleList(
        (0): Bottleneck(
          (cv1): Conv(
            (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
          (cv2): Conv(
            (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
      )
    )
    (3): Conv(
      (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU()
    )
    (4): C2f(
      (cv1): Conv(
        (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU()
      )
      (cv2): Conv(
        (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU()
      )
      (m): ModuleList(
        (0-1): 2 x Bottleneck(
          (cv1): Conv(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
          (cv2): Conv(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
      )
    )
    (5): Conv(
      (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU()
    )
    (6): C2f(
      (cv1): Conv(
        (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU()
      )
      (cv2): Conv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU()
      )
      (m): ModuleList(
        (0-1): 2 x Bottleneck(
          (cv1): Conv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
          (cv2): Conv(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
      )
    )
    (7): Conv(
      (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU()
    )
    (8): C2f(
      (cv1): Conv(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU()
      )
      (cv2): Conv(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU()
      )
      (m): ModuleList(
        (0): Bottleneck(
          (cv1): Conv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
          (cv2): Conv(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
      )
    )
    (9): Classify(
      (conv): Conv(
        (conv): Conv2d(256, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act): SiLU()
      )
      (pool): AdaptiveAvgPool2d(output_size=1)
      (drop): Dropout(p=0.0, inplace=True)
      (linear): Linear(in_features=1280, out_features=5, bias=True)
    )
  )
)
INFO: Starting training:
        Model:          yolov8
        Optimizer:      AdamW
        Epochs:         50
        Batch size:     16
        Training size:  177
        Testing size:   81
        Image size:     1024
        Device:         cuda
        Initial learning rate:  0.01
        Predict class threshold:0.3
    
INFO: train Loss for epoch 1: 0.5530
INFO: every class accuracy{'Normal': 0.8642, 'DR': 0.3951, 'RD': 0.7901, 'MH': 0.9136, 'PH': 0.6049}
INFO: test_mean_loss: 1.6451
INFO: testset accuracy: 0.2615
INFO: at epoch 1, BESTMODEL.pth saved!
INFO: train Loss for epoch 2: 0.5453
INFO: every class accuracy{'Normal': 0.7531, 'DR': 0.5309, 'RD': 0.8025, 'MH': 0.9136, 'PH': 0.7531}
INFO: test_mean_loss: 0.7615
INFO: testset accuracy: 0.2582
INFO: at epoch 2, BESTMODEL.pth saved!
INFO: train Loss for epoch 3: 0.4918
INFO: every class accuracy{'Normal': 0.4815, 'DR': 0.4444, 'RD': 0.8642, 'MH': 0.8519, 'PH': 0.7531}
INFO: test_mean_loss: 0.8670
INFO: testset accuracy: 0.2471
INFO: train Loss for epoch 4: 0.4916
INFO: every class accuracy{'Normal': 0.6049, 'DR': 0.6049, 'RD': 0.8889, 'MH': 0.9136, 'PH': 0.3951}
INFO: test_mean_loss: 1.0693
INFO: testset accuracy: 0.3123
INFO: train Loss for epoch 5: 0.4812
INFO: every class accuracy{'Normal': 0.5556, 'DR': 0.6296, 'RD': 0.8642, 'MH': 0.9136, 'PH': 0.716}
INFO: test_mean_loss: 0.8472
INFO: testset accuracy: 0.3165
INFO: train Loss for epoch 6: 0.4480
INFO: every class accuracy{'Normal': 0.6296, 'DR': 0.716, 'RD': 0.6049, 'MH': 0.9012, 'PH': 0.716}
INFO: test_mean_loss: 0.5337
INFO: testset accuracy: 0.2727
INFO: at epoch 6, BESTMODEL.pth saved!
INFO: train Loss for epoch 7: 0.4837
INFO: every class accuracy{'Normal': 0.8642, 'DR': 0.716, 'RD': 0.6667, 'MH': 0.9136, 'PH': 0.7654}
INFO: test_mean_loss: 0.4751
INFO: testset accuracy: 0.3232
INFO: at epoch 7, BESTMODEL.pth saved!
INFO: train Loss for epoch 8: 0.4549
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.5556, 'RD': 0.7778, 'MH': 0.9136, 'PH': 0.6296}
INFO: test_mean_loss: 0.4814
INFO: testset accuracy: 0.3939
INFO: train Loss for epoch 9: 0.4361
INFO: every class accuracy{'Normal': 0.8148, 'DR': 0.6914, 'RD': 0.8148, 'MH': 0.9136, 'PH': 0.7407}
INFO: test_mean_loss: 0.6353
INFO: testset accuracy: 0.3364
INFO: train Loss for epoch 10: 0.4734
INFO: every class accuracy{'Normal': 0.8642, 'DR': 0.5185, 'RD': 0.8272, 'MH': 0.9136, 'PH': 0.716}
INFO: test_mean_loss: 0.4592
INFO: testset accuracy: 0.3016
INFO: at epoch 10, BESTMODEL.pth saved!
INFO: train Loss for epoch 11: 0.4656
INFO: every class accuracy{'Normal': 0.8765, 'DR': 0.6914, 'RD': 0.6543, 'MH': 0.9012, 'PH': 0.7037}
INFO: test_mean_loss: 0.5110
INFO: testset accuracy: 0.2964
INFO: train Loss for epoch 12: 0.4248
INFO: every class accuracy{'Normal': 0.6914, 'DR': 0.642, 'RD': 0.8519, 'MH': 0.8272, 'PH': 0.6914}
INFO: test_mean_loss: 0.6336
INFO: testset accuracy: 0.2955
INFO: train Loss for epoch 13: 0.4410
INFO: every class accuracy{'Normal': 0.7284, 'DR': 0.7654, 'RD': 0.5185, 'MH': 0.679, 'PH': 0.6914}
INFO: test_mean_loss: 0.7777
INFO: testset accuracy: 0.2255
INFO: train Loss for epoch 14: 0.4179
INFO: every class accuracy{'Normal': 0.7531, 'DR': 0.4074, 'RD': 0.8765, 'MH': 0.9136, 'PH': 0.4321}
INFO: test_mean_loss: 0.7050
INFO: testset accuracy: 0.3688
INFO: train Loss for epoch 15: 0.4961
INFO: every class accuracy{'Normal': 0.9012, 'DR': 0.6296, 'RD': 0.8025, 'MH': 0.9136, 'PH': 0.6667}
INFO: test_mean_loss: 0.5182
INFO: testset accuracy: 0.3463
INFO: train Loss for epoch 16: 0.4690
INFO: every class accuracy{'Normal': 0.3704, 'DR': 0.6914, 'RD': 0.8519, 'MH': 0.9136, 'PH': 0.8025}
INFO: test_mean_loss: 5.7908
INFO: testset accuracy: 0.2286
INFO: train Loss for epoch 17: 0.4527
INFO: every class accuracy{'Normal': 0.642, 'DR': 0.6049, 'RD': 0.8395, 'MH': 0.9136, 'PH': 0.7037}
INFO: test_mean_loss: 0.8438
INFO: testset accuracy: 0.3040
INFO: train Loss for epoch 18: 0.4353
INFO: every class accuracy{'Normal': 0.7901, 'DR': 0.5679, 'RD': 0.7654, 'MH': 0.9136, 'PH': 0.5432}
INFO: test_mean_loss: 0.6030
INFO: testset accuracy: 0.2571
INFO: train Loss for epoch 19: 0.4529
INFO: every class accuracy{'Normal': 0.8642, 'DR': 0.679, 'RD': 0.7778, 'MH': 0.9136, 'PH': 0.6543}
INFO: test_mean_loss: 0.4963
INFO: testset accuracy: 0.3401
INFO: train Loss for epoch 20: 0.4514
INFO: every class accuracy{'Normal': 0.8642, 'DR': 0.6667, 'RD': 0.7778, 'MH': 0.9136, 'PH': 0.679}
INFO: test_mean_loss: 0.4825
INFO: testset accuracy: 0.4378
INFO: train Loss for epoch 21: 0.4422
INFO: every class accuracy{'Normal': 0.8765, 'DR': 0.6173, 'RD': 0.7901, 'MH': 0.9136, 'PH': 0.6173}
INFO: test_mean_loss: 0.4528
INFO: testset accuracy: 0.4142
INFO: at epoch 21, BESTMODEL.pth saved!
INFO: train Loss for epoch 22: 0.4309
INFO: every class accuracy{'Normal': 0.8765, 'DR': 0.679, 'RD': 0.8025, 'MH': 0.9136, 'PH': 0.6173}
INFO: test_mean_loss: 0.4587
INFO: testset accuracy: 0.3554
INFO: train Loss for epoch 23: 0.4456
INFO: every class accuracy{'Normal': 0.9012, 'DR': 0.6173, 'RD': 0.8519, 'MH': 0.9136, 'PH': 0.6296}
INFO: test_mean_loss: 0.4728
INFO: testset accuracy: 0.4484
INFO: train Loss for epoch 24: 0.4421
INFO: every class accuracy{'Normal': 0.8765, 'DR': 0.6543, 'RD': 0.8519, 'MH': 0.9136, 'PH': 0.6543}
INFO: test_mean_loss: 0.4710
INFO: testset accuracy: 0.4498
INFO: train Loss for epoch 25: 0.4111
INFO: every class accuracy{'Normal': 0.9012, 'DR': 0.6173, 'RD': 0.8395, 'MH': 0.9136, 'PH': 0.6049}
INFO: test_mean_loss: 0.4732
INFO: testset accuracy: 0.4400
INFO: train Loss for epoch 26: 0.4472
INFO: every class accuracy{'Normal': 0.9012, 'DR': 0.6049, 'RD': 0.8889, 'MH': 0.9136, 'PH': 0.6296}
INFO: test_mean_loss: 0.4769
INFO: testset accuracy: 0.3647
INFO: train Loss for epoch 27: 0.4444
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.6914, 'RD': 0.8642, 'MH': 0.9136, 'PH': 0.6296}
INFO: test_mean_loss: 0.4900
INFO: testset accuracy: 0.3663
INFO: train Loss for epoch 28: 0.4103
INFO: every class accuracy{'Normal': 0.9012, 'DR': 0.6543, 'RD': 0.8272, 'MH': 0.9136, 'PH': 0.642}
INFO: test_mean_loss: 0.4739
INFO: testset accuracy: 0.3649
INFO: train Loss for epoch 29: 0.4144
INFO: every class accuracy{'Normal': 0.8765, 'DR': 0.6543, 'RD': 0.8889, 'MH': 0.9136, 'PH': 0.6543}
INFO: test_mean_loss: 0.4977
INFO: testset accuracy: 0.3719
INFO: train Loss for epoch 30: 0.4232
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.6296, 'RD': 0.8765, 'MH': 0.9136, 'PH': 0.6296}
INFO: test_mean_loss: 0.5017
INFO: testset accuracy: 0.3665
INFO: train Loss for epoch 31: 0.4230
INFO: every class accuracy{'Normal': 0.8765, 'DR': 0.6667, 'RD': 0.8395, 'MH': 0.9136, 'PH': 0.6667}
INFO: test_mean_loss: 0.5258
INFO: testset accuracy: 0.4437
INFO: train Loss for epoch 32: 0.4010
INFO: every class accuracy{'Normal': 0.9012, 'DR': 0.6914, 'RD': 0.8642, 'MH': 0.9136, 'PH': 0.6543}
INFO: test_mean_loss: 0.4947
INFO: testset accuracy: 0.3859
INFO: train Loss for epoch 33: 0.4170
INFO: every class accuracy{'Normal': 0.9012, 'DR': 0.6914, 'RD': 0.7778, 'MH': 0.9136, 'PH': 0.7037}
INFO: test_mean_loss: 0.4740
INFO: testset accuracy: 0.3787
INFO: train Loss for epoch 34: 0.4159
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.6914, 'RD': 0.8395, 'MH': 0.9136, 'PH': 0.679}
INFO: test_mean_loss: 0.5268
INFO: testset accuracy: 0.3758
INFO: train Loss for epoch 35: 0.4251
INFO: every class accuracy{'Normal': 0.8395, 'DR': 0.6667, 'RD': 0.8765, 'MH': 0.9136, 'PH': 0.6914}
INFO: test_mean_loss: 0.5877
INFO: testset accuracy: 0.3736
INFO: train Loss for epoch 36: 0.4067
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.6543, 'RD': 0.8642, 'MH': 0.9136, 'PH': 0.6914}
INFO: test_mean_loss: 0.4918
INFO: testset accuracy: 0.3781
INFO: train Loss for epoch 37: 0.4351
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.6296, 'RD': 0.8642, 'MH': 0.9136, 'PH': 0.6543}
INFO: test_mean_loss: 0.5094
INFO: testset accuracy: 0.3693
INFO: train Loss for epoch 38: 0.4257
INFO: every class accuracy{'Normal': 0.9012, 'DR': 0.6173, 'RD': 0.8519, 'MH': 0.9136, 'PH': 0.6543}
INFO: test_mean_loss: 0.5237
INFO: testset accuracy: 0.4434
INFO: train Loss for epoch 39: 0.4286
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.6173, 'RD': 0.8642, 'MH': 0.9136, 'PH': 0.642}
INFO: test_mean_loss: 0.5118
INFO: testset accuracy: 0.4396
INFO: train Loss for epoch 40: 0.4321
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.6049, 'RD': 0.8642, 'MH': 0.9136, 'PH': 0.6543}
INFO: test_mean_loss: 0.5248
INFO: testset accuracy: 0.4443
INFO: train Loss for epoch 41: 0.4032
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.6173, 'RD': 0.8642, 'MH': 0.9136, 'PH': 0.6543}
INFO: test_mean_loss: 0.5423
INFO: testset accuracy: 0.4497
INFO: train Loss for epoch 42: 0.4139
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.6173, 'RD': 0.8642, 'MH': 0.9136, 'PH': 0.6543}
INFO: test_mean_loss: 0.5275
INFO: testset accuracy: 0.4499
INFO: train Loss for epoch 43: 0.4219
INFO: every class accuracy{'Normal': 0.8765, 'DR': 0.5432, 'RD': 0.8519, 'MH': 0.9136, 'PH': 0.6543}
INFO: test_mean_loss: 0.5582
INFO: testset accuracy: 0.4198
INFO: train Loss for epoch 44: 0.4327
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.5926, 'RD': 0.8519, 'MH': 0.9136, 'PH': 0.6543}
INFO: test_mean_loss: 0.5398
INFO: testset accuracy: 0.4361
INFO: train Loss for epoch 45: 0.4032
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.642, 'RD': 0.8642, 'MH': 0.9136, 'PH': 0.6914}
INFO: test_mean_loss: 0.5222
INFO: testset accuracy: 0.3783
INFO: train Loss for epoch 46: 0.4376
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.642, 'RD': 0.8642, 'MH': 0.9136, 'PH': 0.642}
INFO: test_mean_loss: 0.5416
INFO: testset accuracy: 0.3707
INFO: train Loss for epoch 47: 0.4394
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.6543, 'RD': 0.8765, 'MH': 0.9136, 'PH': 0.6296}
INFO: test_mean_loss: 0.5114
INFO: testset accuracy: 0.3726
INFO: train Loss for epoch 48: 0.4278
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.6296, 'RD': 0.8642, 'MH': 0.9136, 'PH': 0.6173}
INFO: test_mean_loss: 0.5548
INFO: testset accuracy: 0.3595
INFO: train Loss for epoch 49: 0.4160
INFO: every class accuracy{'Normal': 0.8395, 'DR': 0.6914, 'RD': 0.8765, 'MH': 0.9136, 'PH': 0.7037}
INFO: test_mean_loss: 0.6139
INFO: testset accuracy: 0.3871
INFO: train Loss for epoch 50: 0.4351
INFO: every class accuracy{'Normal': 0.8889, 'DR': 0.6296, 'RD': 0.8765, 'MH': 0.9136, 'PH': 0.6296}
INFO: test_mean_loss: 0.4944
INFO: testset accuracy: 0.3636
